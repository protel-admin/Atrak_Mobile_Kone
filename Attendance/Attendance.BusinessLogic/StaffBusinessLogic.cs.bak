using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web.Mvc;
using System.Web.UI.WebControls;
using Attendance.Model;
using Attendance.Repository;


namespace Attendance.BusinessLogic
{
    public class StaffBusinessLogic
    {
        StaffRepository staffObj = new StaffRepository();
        RACoffAvailingApplicationRepository repo = new RACoffAvailingApplicationRepository();
        public string GetTotalDaysLeave(string StaffId, string LeaveStartDurationId, string FromDate, string ToDate, string LeaveEndDurationId, string LeaveTypeId)
        {
            return staffObj.GetTotalDaysLeave(StaffId, LeaveStartDurationId, FromDate, ToDate, LeaveEndDurationId, LeaveTypeId);
        }
        #region Bulk Shift Import
        public string GetShiftNameBusinessLogic(string ShiftName)
        {
            return staffObj.GetShiftNameRepository(ShiftName);
        }
        public string SaveBulkShiftsBusinessLogic(List<BulkShiftImportModel> model, string CreatedBy)
        {
            return staffObj.SaveBulkShiftsRepository(model, CreatedBy);
        }
        public List<string> GetActiveShiftBusinessLogic()
        {
            return staffObj.GetActiveShiftRepository();
        }
        #endregion
        public string ValidateCoffAvailing(string StaffId, string COffFromDate, string COffToDate, decimal TotalDays, string COffReqDate, string LeaveType)
        {
            return repo.ValidateCoffAvailing(StaffId, COffFromDate, COffToDate, TotalDays, COffReqDate, LeaveType);
        }
        public string GetCoffReqPeriodBusinessLogic()
        {
            return staffObj.GetCoffReqPeriodRepository();
        }
        public string GetUniqueId()
        {
            var repo = new RACoffRequestApplicationRepository();
            return repo.GetUniqueId();
        }
        public void SaveRequestApplication(ClassesToSave DataToSave)
        {
            RACoffRequestApplicationRepository repo = new RACoffRequestApplicationRepository();
            repo.SaveRequestApplication(DataToSave);
        }
        public List<SelectListItem> GetDurationListBusinessLogic()
        {
            var lst = staffObj.GetDurationListRepository();

            var item = new List<SelectListItem>();

            item = lst.Select(i => new SelectListItem()
            {
                Text = i.Name,
                Value = i.Id.ToString(),
                Selected = false
            }).ToList();

            return item;
        }
        public StaffInformation GetStaffMainInformation(string staffid)
        {
            var repo = new StaffRepository();
            var si = repo.GetStaffMainInformation(staffid);
            return si;
        }

        public StaffOfficialInformation GetStaffOfficialInformation(string staffid)
        {
            var repo = new StaffRepository();
            var so = repo.GetStaffOfficialInformation(staffid);
            return so;
        }


        public StaffOfficialInformation GetstaffShiftPlanvalue(string staffid)
        {
            var repo = new StaffRepository();
            var so = repo.GetstaffShiftPlanvalue(staffid);
            return so;
        }

        public StaffPersonalInformation GetStaffPersonalInformation(string staffid)
        {
            var repo = new StaffRepository();
            var sp = repo.GetStaffPersonalInformation(staffid);
            return sp;
        }

        public string SaveStaffInformationToDB(Staff _Sta, StaffPersonal _SP, StaffOfficial _SO, EmployeePhoto _EP, List<AdditionalFieldValue> _AF, EmployeeShiftPlan _ESP, AttendanceControlTable _ACT, bool AddMode)
        {
            return staffObj.SaveStaffInformationToDB(_Sta, _SP, _SO, _EP, _AF, _ESP, _ACT, AddMode);
        }

        public EmployeePhoto GetEmployeePhoto(string StaffId)
        {
            var repo = new StaffRepository();
            var Data = repo.GetEmployeePhoto(StaffId);

            if (Data != null)
            {
                return Data;
            }
            else
            {
                return null;
            }
        }
        public string GetLevelOfApprovalfromSettings()
        {
            return staffObj.GetLevelOfApprovalfromSettings();
        }
        public List<SelectListItem> GetAllWorkingDayPattern()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllWorkingDayPattern();

            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.PsCode + d.PatternDesc,
                Value = d.Id.ToString(),
                Selected = true
            }).ToList();

            return items;
        }

        public List<SelectListItem> GetAllCompanies()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllCompanies();

            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;

        }

        public List<SelectListItem> GetAllBranches()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllBranches();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllDepartments()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllDepartments();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllDivisions()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllDivisions();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllVolumes()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllVolumes();
            var items = new List<SelectListItem>();
            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }


        public List<SelectListItem> GetAllDesignations()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllDesignations();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllGrades()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllGrades();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllCategories()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllCategories();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllCostCentres()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllCostCentres();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllSecurityGroup()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllSecurityGroup();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllLocations()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllLocations();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllStatuses()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllStatuses();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllMaritalStatus()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllMaritalStatus();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllBloodGroup()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllBloodGroup();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }


        public List<SelectListItem> GetAllLeaveGroup()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllLeaveGroup();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllHolidayGroup()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllHolidayGroup();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<SelectListItem> GetAllWeeklyOffGroup()
        {
            var repo = new StaffRepository();
            var lst = repo.GetAllWeeklyOffGroup();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id.ToString(),
                Selected = false
            }).ToList();
            return items;
        }

        public List<StaffFamilyInformation> GetStaffFamilyInformation(string staffid)
        {
            var repo = new StaffRepository();
            var lst = repo.GetStaffFamilyInformation(staffid);
            return lst;
        }

        public List<StaffEducationInformation> GetStaffEducationInformation(string staffid)
        {
            var repo = new StaffRepository();
            var lst = repo.GetStaffEducationInformation(staffid);
            return lst;
        }

        public List<SelectListItem> GetSalutation()
        {
            var repo = new StaffRepository();
            var lst = repo.GetSalutation();

            var items = new List<SelectListItem>();
            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id,
                Selected = true
            }).ToList();

            return items;
        }

        public List<SelectListItem> GetPolicyList()
        {
            var repo = new StaffRepository();
            var lst = repo.GetPolicyList();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.name,
                Value = d.id,
                Selected = true
            }).ToList();

            return items;
        }
        public List<SelectListItem> GetshiftList()
        {
            var repo = new StaffRepository();
            var lst = repo.GetshiftList();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id,
                Selected = true
            }).ToList();

            return items;
        }

        public List<SelectListItem> Getshiftpattern()
        {
            var repo = new StaffRepository();
            var lst = repo.Getshiftpattern();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id,
                Selected = true
            }).ToList();

            return items;
        }
        public List<SelectListItem> GetWorkStationList()
        {
            var repo = new StaffRepository();
            var lst = repo.GetWorkStationList();
            var items = new List<SelectListItem>();

            items = lst.Select(d => new SelectListItem()
            {
                Text = d.Name,
                Value = d.Id,
                Selected = true
            }).ToList();

            return items;
        }

        public string SaveStaffInformationRequest(Staff _Sta, StaffPersonal _SP, StaffOfficial _SO, EmployeePhoto _EP, List<AdditionalFieldValue> _AF, EmployeeShiftPlan _ESP, AttendanceControlTable _ACT, string loggedInUserStaffId)
        {
            var repo = new StaffRepository();
            return repo.SaveStaffInformationRequest(_Sta, _SP, _SO, _EP, _AF, _ESP, _ACT, loggedInUserStaffId);
        }
        public List<StaffEditReqModel> GetStaffEditRequest(string Staffid)
        {
            var repo = new StaffRepository();
            return repo.GetStaffEditRequest(Staffid);
        }
        public void SaveAdditionalField(AdditionalFieldModel objSt, string LoggedinStaffid)
        {
            var repo = new StaffRepository();
            repo.SaveAdditionalField(objSt, LoggedinStaffid);
        }
        public List<AdditionalFieldModel> GetAdditionalFileds()
        {
            var repo = new StaffRepository();
            return repo.GetAdditionalFileds();
        }
        public List<AdditionalFieldModel> GetAdditionalFiledsValues(string staffid)
        {
            var repo = new StaffRepository();
            return repo.GetAdditionalFiledsValues(staffid);
        }
        #region Bulk Masters Import
        public string GetMasterTableValueBusinessLogic(string MasterTable, string Name)
        {
            return staffObj.GetMasterTableValueRepository(MasterTable, Name);
        }
        public string UpdateMastersBusinessLogic(List<BulkMasterImportModel> list, string MasterTable)
        {
            return staffObj.UpdateMastersRepository(list, MasterTable);
        }
        #endregion

        #region Staff Removing Process
        public int ValidateStaffIdBusinessLogic(string StaffId)
        {
            return staffObj.ValidateStaffIdRepository(StaffId);
        }
        public string UpdateBulkEmployeeRelieving(List<RemoveStaffModel> List)
        {
            return staffObj.UpdateBulkEmployeeRelieving(List);
        }
        #endregion

    }
}
